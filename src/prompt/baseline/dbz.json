{
  "model_role_name": "Divide-By-Zero Detector",
    "user_role_name": "Divide-By-Zero Detector",
    "system_role": "You are a Java programmer and very good at analyzing Java code.",
    "task": "Please detect the divide-by-zero according to the following instructions.",
    "analysis_rules": [
      "- The value of zero can be produced in two ways.",
      "  - Specific literals, such as 0, 0.0, and 0.0f.",
      "  - Return value of a function that maps an input string to a numeric value or a random function, such as parseInt, parseFloat, nextInt, and nextFloat.",
      "- If the second operand of a division (/) or modulo (%) operator is potentially zero, a divide-by-zero (dbz) bug can occur."
    ],
    "analysis_examples": [
      "Here are several examples:",
      "Example 1:",
      "User:",
      "Here is the program:",
      "```",
      "1.  int x = 0;",
      "2.  x = 1 + x;",
      "3.  int y = x;",
      "4.  int z = 10 / y;",
      "```",
      "Please detect the dbz bugs in the program step by step.",
      "System:",
      "There is 1 divide-by-zero bug in the program:",
      "Bug 1: The value of x at the line 1 is assigned by the literal 0. It is used to assign zero value to the variable y at line 3. The value of y is used as the divisor at the line 4, such that the divisor is equal to 0. Hence, there is a dbz bug at the line 4.",
      "",

      "Example 2:",
      "User:",
      "Here is the program:",
      "```",
      "1.  int x = Integer.parseInt(input.trim());",
      "2.  int y = 1;",
      "3.  int z1 = 10 / x;",
      "4.  int z2 = 10 % x;",
      "```",
      "Please detect the dbz bugs in the program step by step.",
      "System:",
      "There are 2 divide-by-zero bugs in the program:",
      "Bug 1: The value of x at the line 1 is assigned by the return value of parseInt. It affects the value of the divisor at the line 3, such that the divisor is equal to 0. Hence, there is a dbz bug at the line 3.",
      "Bug 2: The value of x at the line 1 is assigned by the return value of parseInt. It affects the value of the operand of the modulo operator at the line 4, such that it is equal to 0. Hence, there is a dbz bug at the line 4.",
      "",

      "Example 3:",
      "User:",
      "Here is the program:",
      "```",
      "1.  int x = 2;",
      "2.  x = 1 + x;",
      "3.  x = (new SecureRandom()).nextInt();",
      "4.  int y = 1;",
      "5.  int z = 10 / x;",
      "```",
      "Please detect the dbz bugs in the program step by step.",
      "System:",
      "There is 1 divide-by-zero bug in the program:",
      "Bug 1: The value of x at the line 3 is assigned by the return value of nextInt. It affects the value of the divisor at the line 5, such that the divisor is equal to 0. Hence, there is a dbz bug at the line 5.",
      "",

      "Example 4:",
      "User:",
      "Here is the program:",
      "```",
      "1.  float x = 2.0;",
      "2.  x = 1 + x;",
      "3.  x = 0.0f;",
      "4.  int y = Integer.parseInt(input.trim());",
      "5.  y = 1 / x;",
      "```",
      "Please detect the dbz bugs in the program step by step.",
      "System:",
      "There is 1 divide-by-zero bug in the program:",
      "Bug 1: The value of x at the line 3 is assigned by the literal 0.0f. It affects the value of the divisor at the line 5, such that the divisor is equal to 0.0. Hence, there is a dbz bug at the line 5.",
      "",

      "Example 5:",
      "User:",
      "Here is the program:",
      "```",
      "1.  float x = Float.parseFloat(input.trim());",
      "2.  int y = 1;",
      "3.  int z1 = 10 / x;",
      "4.  int z2 = 10 % x;",
      "```",
      "Please detect the dbz bugs in the program step by step.",
      "System:",
      "There are 2 divide-by-zero bugs in the program:",
      "Bug 1: The value of x at the line 1 is assigned by the return value of parseFloat. It affects the value of the divisor at the line 3, such that the divisor is equal to 0. Hence, there is a dbz bug at the line 3.",
      "Bug 2: The value of x at the line 1 is assigned by the return value of parseFloat. It affects the value of the operand of the modulo operator at the line 4, such that it is equal to 0. Hence, there is a dbz bug at the line 4.",
      "",

      "Example 6:",
      "User:",
      "Here is the program:",
      "```",
      "1.  float x = 2.0;",
      "2.  x = 1 + x;",
      "3.  x = (new SecureRandom()).nextFloat();",
      "4.  int y = 1;",
      "5.  int z = 10 % x;",
      "```",
      "Please detect the dbz bugs in the program step by step.",
      "System:",
      "There is 1 divide-by-zero bug in the program:",
      "Bug 1: The value of x at the line 3 is assigned by the return value of nextFloat. It affects the value of the second operator of the modulo operator (%) at the line 5, such that it is equal to 0.0. Hence, there is a dbz bug at the line 5.",
      ""
    ],
    "meta_prompts": [
      "Now I will give you the program as follows: \n ```\n<PROGRAM>\n``` \n. Please detect all the divide-by-zero bugs in it by reasoning the program step by step."
    ],
    "output_constraints": [
      "Your output should be in the following format:",
      "The first line shows the number of the divide-by-zero bugs in the program. Starting from the second line, you should list each bug line by line. Each line indicates how a dbz bug forms."
    ],
    "output_examples": [
      "Here is an example of the output:",
      "System:",
      "There are 2 bugs in the program:",
      "Bug 1: The value of x at the line 1 is assigned by the return value of parseFloat. It affects the value of the divisor at the line 3, such that the divisor is equal to 0. Hence, there is a dbz bug at the line 3.",
      "Bug 2: The value of x at the line 1 is assigned by the return value of parseFloat. It affects the value of the operand of the modulo operator at the line 4, such that it is equal to 0. Hence, there is a dbz bug at the line 4.",
      ""
    ]
}